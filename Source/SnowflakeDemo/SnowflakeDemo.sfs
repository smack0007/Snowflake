// Start with a comment
using System;

Console.WriteLine("Hello World!");

const MaxMultiplier = 10;

var scriptListType = import("Snowflake.ScriptList");
var scriptList = new scriptListType(["a", "b", "c"]);
Console.WriteLine(scriptList);

var stringBuilderType = import("System.Text.StringBuilder");
var sb = new stringBuilderType();
sb.Append("Hello");
sb.Append(" World!");
Console.WriteLine(sb);

func foo() {
	bar();
};

func bar() {
	Console.WriteLine("bar");
};

foo();

var timeSpanType = System.TimeSpan;
var timeSpan = new timeSpanType(1, 2, 3);
System.Console.WriteLine(timeSpan);

var tuple1 = new System.Tuple<int>(21);
Console.WriteLine(tuple1);

var tuple2 = new System.Tuple<int, string>(42, "foo");
Console.WriteLine(tuple2);

var tuple3 = new System.Tuple<System.Tuple<int, string>, System.Tuple<int, string>>(new System.Tuple<int, string>(42, "foo"), new System.Tuple<int, string>(21, "bar"));
Console.WriteLine(tuple3);

var tupleType = System.Tuple<int>;
var tuple4 = new tupleType(42);
System.Console.WriteLine(tuple4);

var tuple5 = new ((func(){ return System.Tuple<string, int>; })())("Hello", 42);
System.Console.WriteLine(tuple5);

var person1 = new Namespace.Person();
person1.FirstName = "Bob";
person1.LastName = "Freeman";

var person2 = new Namespace.Person();
person2.FirstName = "Joe";
person2.LastName = "Montana";

person1.Friends.Add(person2);

Console.WriteLine(person1.Friends[0].FirstName);

Console.WriteLine(person1);

func buildMultiplier(x) {
	return func(y) {
		return x * y;
	};
};

var x5 = buildMultiplier(5);

for (var i = 0; i < MaxMultiplier; i += 1) {
	Console.WriteLine("5 * " + i + " = " + x5(i));
}

var values = [ 5, 4, 3, 2, 1 ];
foreach (var value in values) {
	Console.WriteLine("5 * " + value + " = " + x5(value));
}


export.number = 42;

// End with a comment